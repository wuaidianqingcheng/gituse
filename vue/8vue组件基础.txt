上节简单说了表单绑定  
这节简单聊聊组件基础  

// 定义一个名为 button-counter 的新组件
Vue.component('button-counter', {
  data: function () {
    return {
      count: 0
    }
  },
  template: '<button v-on:click="count++">You clicked me {{ count }} times.</button>'
})

<div id="components-demo">
  <button-counter></button-counter>
</div>
new Vue({ el: '#components-demo' })

组件就是可复用的vue实例，且带有一个名字，我们可以在一个通过new vue创建的vue的根实例里面把这个组件当做自定义元素使用
因为组件是可复用vue实例，所有vue实例所具有的的选项，组件也同样是有的  唯一不同的是el选项是vue根实例所特有的  

因为组件是可以复用的  我们可以在vue根实例下就像使用标签一样使用各类组件
需要注意的是虽说有时我们引用的vue组件是相同的，但是每一个组件都会各自独立维护自身的状态。因为你每使用一次组件，就会有一个它的根实例被创建

data选项   
在vue根实例中data是作为一个选项对象来进行定义的
形如
data:{
index:'1'
}
但是在组件中 data选项是且必须是一个函数
形如
data:{
return {
index:"1"
}
}
假使data不是一个函数的话  那么如果我们引用相同的几个组件 那么我们操作某一个组件  那么所有的组件都会响应
显然这并不是我们想要的效果
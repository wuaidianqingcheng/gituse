一般我们都会使用git或svn这样的代码管理工具，当然可能也许我们不需要使用这些，但是大部分公司都是需要使用git工具的，下面就简单的介绍一下git的几个常用指令
当我们完成一次代码修改后，势必会遇到需要上传代码这等尴尬的事情，如果我们没有使用过git，那就很不好处理啦

首先必须下载git  这个去官网下载对应自身电脑的版本即可
1。在想要上传的文件或代码的文件夹右键单击  git bash  当然你也可以通过命令行的方式cd到指定目录
2。然后git  init  指令  这个是让我们来初始化一下自己的项目或者是代码 此时在你使用git命令的文件夹下生成一个.git目录

3。git status   查看本地库的状态
4。git add . 此处.代表所有 当然如果上传文件很少 或者是单个文件  那么可以直接加文件名称也是可以的  
此时只是将发生改变的文件添加到暂存区
4。git commit -m '上传代码的注释或者是介绍，也可以叫做是提交信息  可以理解为你在上传代码前  你所对代码做了些什么'
此时是将暂存区的文件实际保存到仓库的历史记录  我们可以通过这个记录在需要时在工作树中复原文件
5。git log 查看提交日志  
6。git branch 显示分支名列表  可以确定当前所在的分支  左侧标有*的就表示我们当前所在的分支
7。git diff 查看工作数和暂存区的差别
8。git remote add origin '指定代码要上传到哪个位置  或者说是你的项目所存放的git仓库地址'  此处有两种方法  或许是http 或许是ssh  对于这两种暂时不是理解很多   
我们可以通过全局配置自身用户名和邮箱的方式来忽略对每次上传代码时需要输入的验证   也可以自身通过配置ssh密钥，这个百度有介绍，
通过判定远程仓库的ssh密钥是否和本地主机上生成的密钥一致，如果一致就能够上传
9。git pull origin master 为了确保更新的是最新版本  或者说是为了多人合作开发  假如你的队友在你上传时已经更新过一次代码了  此时你的代码并不包含他更新的内容  
这时为了协作开发的必要  我们需要再push代码之前  先把代码pull下来   确保万无一失
10。git push -u origin master   最后一步  把代码提交到git仓库中即可



***关于下载项目  建议 直接配置ssh密钥吧  这个比较简便   git clone +项目的git地址  或者是http  或者是ssh  嗯关于ssh的获取方法   
暂时分两种吧   1：你可以随便建个文件夹  只要你安装有git  那就鼠标右键 git gui  help里面有一个show ssh key  点开复制再去配置就可以了
	      2：你可以去c盘  一般在c盘  但也不确定   C盘user文件夹  有时也叫用户文件夹里面的admin  admin/.ssh 找到这个文件夹点开里面的id_rsa即可
嗯，最后声明一点  关于ssh的配置其实我自身感觉它是为了让我们在操作git的过程中需要输入email和密码时自动忽略该选项！
嗯，其实可以理解为远程仓库和你的电脑之间有一扇门，验证邮箱和密码就是钥匙，ssh也是钥匙  只不过 邮箱和密码是自己设置的  ssh是电脑本身生成的 
***有时遇到某些报错或者无法解决的bug时  可以rm -rf .git
关于git使用过程中部分报错情况

fatal: remote origin already exists   简单提供一种方法   git remote rm origin  因为报错的原因就在于远程仓库已经存在  所以就先删除远程仓库后再重新git remote add origin
 vi .git/config   把 [remote “origin”] 那一行删掉就好了

  当出现下面这行报错时我们需要先合并一下请求再push  git pull --rebase origin master
 failed to push some refs to 'git@github.com:wuaidianqingcheng/success.git

当出现下面的这个错误的时候
git push时报错fatal: Could not read from remote repository.
就极有可能是两次的github地址不一样  我们可以git remote -v  查看一下仓库地址  很清楚的发现
origin  git@github.com:wuaidianqingcheng/success.git (fetch)
origin  git@github.com:wuaidianqingcheng/success.git (push)
一个为push 一个为fetch   此时  我们需要git remote set-url origin '你的项目地址'
之后重新pull push， 即可

有时我们git  push origin master 或者git的pull时候 
当报错git@github.com: Permission denied (publickey).
fatal: Could not read from remote repository.
极有可能是我们的密钥错误  从新打开密钥文件  或者重新生成密钥  复制粘贴进去  重新push  即可



